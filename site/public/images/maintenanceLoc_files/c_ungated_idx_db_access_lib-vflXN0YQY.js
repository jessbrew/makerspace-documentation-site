!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="b63dd8cf-9ca8-3f7b-969e-3770944f333a")}catch(e){}}();
define(["exports","./e_file_viewer_static_scl_page_folder","./e_core_exception","react","./c_core_i18n","./c_src_sink_index","./c_pap-events_docsend_view_docsend_hub_entry_button","./c_api_v2_routes_password_confirmation_provider","./c_lodash","metaserver/static/js/langpack","./e_edison","./c_api_v2_routes_folders_info_provider","./e_data_modules_stormcrow","./c_core_notify","react-dom","metaserver/static/js/modules/constants/viewer","./c_api_v2_routes_team_provider"],(function(e,t,r,a,n,o,s,i,d,l,c,_,u,g,E,h,f){"use strict";function S(){return(new Date).getTime()}let w=null;const p="UG_DBX_DB",T="UG_STORE";function y(e){return new Promise(((t,r)=>{e.onsuccess=()=>t(e.result),e.onerror=()=>r(e.error)}))}async function C(e){return(await function(){if(!w){const e=indexedDB.open(p);e.onerror=e=>{console.error("There was an issue with initializing DB ",e)},e.onupgradeneeded=()=>e.result.createObjectStore(T),w=y(e)}return w}()).transaction(T,e).objectStore(T)}function D(e){const t=e.transaction;return new Promise(((e,r)=>{t.oncomplete=()=>e(),t.onabort=t.onerror=()=>r(t.error)}))}const I={check:async()=>Boolean(await C("readonly")),get:async e=>{const t=await C("readonly");return await y(t.get(e))},has:async e=>Boolean(await I.get(e)),set:async(e,t,r=0)=>{const a=await C("readwrite");await y(a.put(t,e)),await D(a)},entries:async()=>{const e=await C("readonly"),[t,r]=await Promise.all([y(e.getAllKeys()),y(e.getAll())]),a=[];return t.forEach(((e,t)=>{a.push([e,r[t]])})),a},delete:async e=>{const t=await C("readwrite");await y(t.delete(e)),await D(t)},multiDelete:async e=>{const t=await C("readwrite");await Promise.all(e.map((e=>t.delete(e)))),await D(t)},clear:async()=>{const e=await C("readwrite");await y(e.clear()),await D(e)}};var v;e.Store=void 0,(v=e.Store||(e.Store={})).PDF_EDIT_STORE="pdfEdit",v.PDF_EDIT_UPLOAD_STORE="pdfEditUpload",v.PDF_EDIT_SHARED_STORE="pdfEditShared",v.PDF_CONVERT_STORE="pdfConvert",v.IMG_EDIT_STORE="imgEdit",v.FILE_UPLOAD="fileUpload";const m=3600,b="data",L="metadata",R="EMPTY",U="storeType",x="creationTimeStamp",A="updatedTimeStamp",N="fileName",O="ungated_idx_db_lib",F="_ugStoreKey",k="ttlSeconds",Y=157286400;function M(e){return new Blob([e],{type:"text/plain"}).size}function B(e,t=r.SEVERITY.CRITICAL){console.log(`Ungated IndexedDB Store: ${e}`),r.reportException({err:new Error(e),tags:[O],severity:t})}function P(e){const[t,r]=e.split("_");return t}function $(e){if(!(A in e)||!(k in e))return!0;return Number(e[A])+1e3*Number(e[k])<S()}const V={isCompatible:async e=>{const r=await I.check();return r||t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{error:"browser_compatibility",store:e}}),r},init:async(e,r=3600,a=!1)=>{t.UDCL.logStart("ungated_store_init",{tags:{state:"start",store:e}});const n=a?"all":e;await V.cleanupExpiredSessionsForStore(n);const o=function(e){return(e+"_"+t.UUID.v4()+F).toString()}(e),s=I.set(o,function(e,t){const r=S().toString();return{[b]:R,[L]:"{}",[U]:e,[x]:r.toString(),[A]:r.toString(),[N]:r.toString(),[k]:t.toString()}}(e,r));return s.then((()=>(t.UDCL.logEnd("ungated_store_init",{eventState:"success",tags:{store:e}}),o))).catch((r=>{throw B(`Could not initialize a store in indexedDB. Check browser limits or cookie settings. ${r}`),t.UDCL.logEnd("ungated_store_init",{eventState:"failed",tags:{store:e}}),r}))},setSessionData:async(e,a,n,o=3600)=>{if(0===a.byteLength||M(a)>Y){const e="File is empty or size is larger than 150 MB. Exiting processing.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await I.has(e)||null===n){const e="SetSessionData: Invalid file metadata or session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then((t=>(t[b]=a,t[L]=JSON.stringify(n),t[A]=S().toString(),t[k]=o.toString(),I.set(e,t,o)))).catch((r=>{throw B(`Could not set session data. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"set_session_data"}}),r}))},getSessionData:async e=>{if(!await I.has(e)){const e="GetSessionData: Session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then((t=>{if(!$(t))return t;V.deleteUngatedSession(e)})).catch((r=>{throw B(`Could not retrieve file data. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"get_session_data"}}),r}))},hasUngatedSessionKey:async e=>await I.has(e),saveFileData:async(e,a,n=3600)=>{if(0===a.byteLength||M(a)>Y){const e="File is empty or size is larger than 150 MB. Exiting processing.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await I.has(e)){const e="Invalid file data or session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then(((t={})=>(t[b]=a,t[A]=S().toString(),t[k]=n.toString(),I.set(e,t,n)))).catch((r=>{throw B(`Could not save file data to indexedDB. Check file size or try again. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"save_file_data"}}),r}))},getFileData:async e=>{if(!await I.has(e)){const e="GetFileData: Session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then(((t={})=>{if(!$(t))return b in t?t[b]:void 0;V.deleteUngatedSession(e)})).catch((r=>{throw B(`Could not get file data from indexedDB. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"get_file_data"}}),r}))},getLatestUngatedSessionKeyForStore:async e=>I.entries().then((t=>{let r="",a="0";for(const n of t){const[t,o]=n;if("all"===e||t.startsWith(e)){const e=o[A]||"0";e>=a&&(r=t,a=e)}}return r})).catch((r=>{throw B(`Could not get latest session key for ${e}. It is possible it has already expired. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"get_latest_key"}}),r})),saveFileMetadata:async(e,a,n=3600)=>{if(null===a){const e="File metadata is null. Returning";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await I.has(e)){const e="SaveFileMetadata: Session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then(((t={})=>(t[L]=JSON.stringify(a),t[A]=S().toString(),t[k]=n.toString(),I.set(e,t,n)))).catch((r=>{throw B(`Could not save file metadata to indexedDB. Check keys and values are set to string type for key ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"save_file_metadata"}}),r}))},getFileMetadata:async e=>{if(!await I.has(e)){const e="getFileMetadata: Session key does not exist or has expired.";throw B(e,r.SEVERITY.NONCRITICAL),new Error(e)}return I.get(e).then(((t={})=>{if(!$(t))return L in t?JSON.parse(t[L]):{};V.deleteUngatedSession(e)})).catch((r=>{throw B(`Could not retrieve file metadata. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"get_file_metadata"}}),r}))},cleanupOldSessionsForStore:async e=>{const r=I.entries(),a=[];return r.then((t=>{for(const r of t){const[t,n]=r;t.endsWith(F)&&("all"===e||t.startsWith(e))&&a.push(t)}return I.multiDelete(a)})).catch((r=>{throw B(`Could not delete old entries for store ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"cleanup_old_sessions"}}),r}))},cleanupExpiredSessionsForStore:async e=>{const r=I.entries(),a=[];return r.then((t=>{for(const r of t){const[t,n]=r;t.endsWith(F)&&("all"===e||t.startsWith(e))&&$(n)&&a.push(t)}return I.multiDelete(a)})).catch((r=>{throw B(`Could not remove expired entries for store ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"cleanup_expired_sessions"}}),r}))},deleteUngatedSession:async e=>{if(!await I.has(e)){B("DeleteUngatedSession: Session key does not exist or has expired.",r.SEVERITY.NONCRITICAL)}return I.delete(e).then((()=>{})).catch((r=>{B(`Could not retrieve file metadata. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:P(e),error:"delete_session"}})}))}};e.CREATION_TIMESTAMP_KEY=x,e.DATA_KEY=b,e.DEFAULT_EXPIRATION_SECONDS=m,e.EMPTY_VALUE=R,e.ERROR_TAG=O,e.FILENAME_KEY=N,e.METADATA_KEY=L,e.STORE_KEY=U,e.TTL=k,e.UG_STORE_KEY_SUFFIX=F,e.UPDATED_TIMESTAMP_KEY=A,e.UPLOAD_FILE_SIZE_LIMIT_MB=150,e.checkBufferSize=M,e.reportErrorMessage=B,e.ungatedDBStore=V}));
//# sourceMappingURL=c_ungated_idx_db_access_lib.js-vflTzPRam.map

//# debugId=b63dd8cf-9ca8-3f7b-969e-3770944f333a